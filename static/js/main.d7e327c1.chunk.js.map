{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/NewCommentForm/NewCommentForm.tsx","api/comments.ts","components/PostDetails/PostDetails.tsx","components/UserSelect/UserSelect.tsx","App.tsx","api/posts.ts","index.tsx"],"names":["PostsList","posts","selectedPostId","handleSetSelectedPostId","className","map","id","userId","title","type","onClick","event","BASE_URL","request","url","options","fetch","then","res","json","err","Error","NewCommentForm","postId","handlePostComments","useState","name","setName","email","setEmail","body","setBody","useEffect","onSubmit","comment","preventDefault","method","headers","JSON","stringify","setTimeout","value","placeholder","onChange","target","PostDetails","postDetails","postBody","comments","setComments","show","setShow","requestGetPostComments","getPostComments","newComments","handleDeletePostComments","commentId","deletePostComments","length","UserSelect","userSelect","handleSetUserSelect","post","createdAt","updatedAt","App","setPosts","setUserSelect","setSelectedPostId","setPostDetails","requestGetUserPosts","newPosts","requestGetPostDetails","newPostsDetails","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7e327c1.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ninterface Props {\n  posts: Post[],\n  selectedPostId: string,\n  handleSetSelectedPostId: any,\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPostId,\n  handleSetSelectedPostId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(({ id, userId, title }) => (\n        <li\n          key={id}\n          className=\"PostsList__item\"\n        >\n          <div>\n            <b>\n              [User #\n              {userId}\n              ]:\n            </b>\n            {title}\n          </div>\n          {+selectedPostId === id\n            ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button active\"\n                onClick={(event) => handleSetSelectedPostId(event, '')}\n              >\n                Close\n              </button>\n            )\n            : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={(event) => handleSetSelectedPostId(event, id)}\n              >\n                Open\n              </button>\n            )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = (url: string, options: any = {}) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(res => {\n      try {\n        return res.json();\n      } catch (err: any) {\n        return new Error(err);\n      }\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport { commentPostComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ninterface Props {\n  postId: number,\n  handlePostComments: any,\n}\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, handlePostComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    commentPostComments({\n      postId,\n      name,\n      email,\n      body,\n    });\n\n    setTimeout(() => {\n      handlePostComments();\n      setName('');\n      setEmail('');\n      setBody('');\n    }, 100);\n  };\n\n  useEffect(() => {\n    setName('');\n    setEmail('');\n    setBody('');\n  }, [postId]);\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setName(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setEmail(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setBody(target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { request } from './api';\n\nexport const getPostComments = (postId: number) => request(`/comments?postId=${postId}`);\n\nexport const deletePostComments = (commentId: number) => request(`/comments/${commentId}`, { method: 'DELETE' });\n\nexport const commentPostComments = (comment: Comm) => request('/comments', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json;charset=utf-8',\n  },\n  body: JSON.stringify(comment),\n});\n","import React, { useState, useEffect } from 'react';\nimport { getPostComments, deletePostComments } from '../../api/comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ninterface Props {\n  postDetails: Post,\n}\n\nexport const PostDetails: React.FC<Props> = ({ postDetails }) => {\n  const postId = postDetails.id;\n  const postBody = postDetails.body;\n\n  const [comments, setComments] = useState([]);\n  const [show, setShow] = useState(true);\n\n  const requestGetPostComments = (id: number) => {\n    getPostComments(id)\n      .then(newComments => {\n        setComments(newComments);\n      });\n  };\n\n  useEffect(() => {\n    requestGetPostComments(postId);\n  }, [postId]);\n\n  const handleSetShow = () => {\n    setShow(!show);\n  };\n\n  const handleDeletePostComments = (commentId: number) => {\n    deletePostComments(commentId);\n\n    setTimeout(() => {\n      requestGetPostComments(postId);\n    }, 100);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>\n          {postBody}\n        </p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleSetShow}\n        >\n          {show ? 'Hide' : 'Show'}\n          {` ${comments.length} comments`}\n        </button>\n\n        {show && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(({ id, body }) => (\n              <li\n                key={id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => handleDeletePostComments(id)}\n                >\n                  X\n                </button>\n                <p>\n                  {body}\n                </p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            handlePostComments={() => requestGetPostComments(postId)}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\nimport './UserSelect.scss';\n\ninterface Props {\n  userSelect: string,\n  handleSetUserSelect: any,\n}\n\nexport const UserSelect: React.FC<Props> = ({ userSelect, handleSetUserSelect }) => (\n  <label>\n    Select a user: &nbsp;\n\n    <select\n      className=\"user-selector\"\n      value={userSelect}\n      onChange={handleSetUserSelect}\n    >\n      <option value=\"0\">All users</option>\n      <option value=\"1\">Leanne Graham</option>\n      <option value=\"2\">Ervin Howell</option>\n      <option value=\"3\">Clementine Bauch</option>\n      <option value=\"4\">Patricia Lebsack</option>\n      <option value=\"5\">Chelsey Dietrich</option>\n      <option value=\"6\">Mrs. Dennis Schulist</option>\n      <option value=\"7\">Kurtis Weissnat</option>\n      <option value=\"8\">Nicholas Runolfsdottir V</option>\n      <option value=\"9\">Glenna Reichert</option>\n      <option value=\"10\">Leanne Graham</option>\n    </select>\n  </label>\n);\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect/UserSelect';\nimport { getUserPosts, getPostDetails } from './api/posts';\n\nconst post = {\n  id: 0,\n  createdAt: '',\n  updatedAt: '',\n  userId: 0,\n  title: '',\n  body: '',\n};\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState([]);\n  const [userSelect, setUserSelect] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState('');\n  const [postDetails, setPostDetails] = useState(post);\n\n  const requestGetUserPosts = (url: string) => {\n    getUserPosts(url)\n      .then(newPosts => {\n        setPosts(newPosts);\n      });\n  };\n\n  const requestGetPostDetails = (url: string) => {\n    getPostDetails(url)\n      .then(newPostsDetails => {\n        setPostDetails(newPostsDetails);\n      });\n  };\n\n  const handleSetUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n\n    setUserSelect(event.target.value);\n  };\n\n  const handleSetSelectedPostId = (event: React.ChangeEvent<HTMLSelectElement>, postId: string) => {\n    event.preventDefault();\n\n    setSelectedPostId(postId);\n  };\n\n  useEffect(() => {\n    requestGetUserPosts('');\n  }, []);\n\n  useEffect(() => {\n    if (userSelect === '0') {\n      requestGetUserPosts('');\n    } else {\n      requestGetUserPosts(`?userId=${userSelect}`);\n    }\n  }, [userSelect]);\n\n  useEffect(() => {\n    if (selectedPostId) {\n      requestGetPostDetails(`${selectedPostId}`);\n    } else {\n      setPostDetails(post);\n    }\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          userSelect={userSelect}\n          handleSetUserSelect={handleSetUserSelect}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            handleSetSelectedPostId={handleSetSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId\n            ? <PostDetails postDetails={postDetails} />\n            : 'Post not selected'}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { request } from './api';\n\nexport const getUserPosts = (userId: string) => request(`/posts${userId}`);\n\nexport const getPostDetails = (postId: string) => request(`/posts/${postId}`);\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}